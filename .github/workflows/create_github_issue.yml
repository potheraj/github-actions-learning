name: Create Github Issue

on:
  issues:
    types: [closed]

jobs:
  extract-values:
    if: contains(github.event.issue.labels.*.name, 'test_plan')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Check label
        id: check_label
        run: |
          LABEL_FOUND=$(jq -r '.issue.labels[] | select(.name == "test_plan") | .name' < "$GITHUB_EVENT_PATH")
          echo "Label Found: $LABEL_FOUND"
          if [[ "$LABEL_FOUND" == "test_plan" ]]; then
            echo "label_found=true" >> $GITHUB_ENV
          else
            echo "label_found=false" >> $GITHUB_ENV
            echo "Required label not found. Exiting."
            exit 1
          fi

      - name: Extract issue details
        id: extract_details
        run: ./extract_details.sh
        env:
          GITHUB_EVENT_PATH: ${{ github.event_path }}
          GITHUB_OUTPUT: ${{ github.output }}

      - name: Output the details
        if: env.label_found == 'true'
        run: |
          echo "The Issue Title: ${{ github.event.issue.title }}"
          echo "The Issue Body: ${{ github.event.issue.body }}"
          echo "Deliverable: ${{ steps.extract_details.outputs.deliverable_name }}"
          echo "Major Release: ${{ steps.extract_details.outputs.major_release }}"

      - name: Create GH Milestone
        id: create_milestone
        uses: actions/github-script@v6
        with: 
          script: |
            const deliverable_name = '${{ steps.extract_details.outputs.deliverable_name }}';
            const issueNumber = context.issue.number;
            const { data: milestone } = await github.rest.issues.createMilestone({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `New Milestone - ${deliverable_name}`,
              state: 'open',
              description: 'this is a milestone for testing',
              due_on: new Date().toISOString()
            })
            core.setOutput('milestone_number', milestone.number)

            const milestoneUrl = `https://github.com/${context.repo.owner}/${context.repo.repo}/milestone/${milestone.number}`;
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issueNumber,
              body: `Milestone [Test Plan - ${deliverable_name}](${milestoneUrl}) created`
            })

      - name: Create Github Sub-Issue
        uses: actions/github-script@v6
        with: 
          script: |
            const issueNumber = context.issue.number;
            const milestoneNumber = '${{ steps.create_milestone.outputs.milestone_number }}';
            const { data: subIssue } = await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `Testing Sub issue`,
              body: 'Testing sub issue body',
              milestone: milestoneNumber
            })
            core.setOutput('sub_issue_number', subIssue.number)

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issueNumber,
              body: `#${subIssue.number}`
            })
